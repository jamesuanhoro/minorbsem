% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_residual_network.R
\name{compute_residual_network}
\alias{compute_residual_network}
\title{Compute residual network}
\usage{
compute_residual_network(object)
}
\arguments{
\item{object}{(mbsem) An object of \code{\link{mbsem-class}}
returned by \code{\link{minorbsem}}.}
}
\value{
A data.frame containing posterior samples of the partial
correlation matrix.
}
\description{
Interpret the error correlations as a residual network model.
}
\examples{
\dontrun{
fit <- minorbsem("F1 =~ x1 + x2 + x3
                  F2 =~ x4 + x5 + x6
                  F3 =~ x7 + x8 + x9", HS)
res_net <- compute_residual_network(fit)
p_corr_df <- posterior::summarise_draws(res_net)
n_items <- sqrt(nrow(p_corr_df))
p_corr_mat <- matrix(p_corr_df$mean, n_items)
p_corr_mat
qgraph::qgraph(p_corr_mat, layout = "spring")

# Complete Gaussian graphical model via a unidimensional model
# with all loadings set to zero.
fit <- minorbsem(paste0("F =~ ", paste0("0 * x", 1:9, collapse = " + ")), HS)
res_net <- compute_residual_network(fit)
p_corr_df <- posterior::summarise_draws(res_net)
n_items <- sqrt(nrow(p_corr_df))
p_corr_mat <- matrix(p_corr_df$mean, n_items)
p_corr_mat
qgraph::qgraph(p_corr_mat, layout = "spring")
}
}
